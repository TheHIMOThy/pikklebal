ping-pong-game/
├── ping_pong_game.py
├── requirements.txt
├── README.md
└── .gitignore
import pygame
import random

# Initialize pygame
pygame.init()

# Constants
WIDTH, HEIGHT = 800, 600
FPS = 60
PADDLE_WIDTH, PADDLE_HEIGHT = 15, 100
BALL_SIZE = 15
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)

# Initialize game window
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Ping Pong Game")

# Fonts for score
font = pygame.font.SysFont("Arial", 30)

# Paddle class
class Paddle:
    def __init__(self, x, y):
        self.rect = pygame.Rect(x, y, PADDLE_WIDTH, PADDLE_HEIGHT)
        self.speed = 6

    def move(self, speed):
        keys = pygame.key.get_pressed()
        if keys[pygame.K_UP] and self.rect.top > 0:
            self.rect.y -= speed
        if keys[pygame.K_DOWN] and self.rect.bottom < HEIGHT:
            self.rect.y += speed

    def draw(self):
        pygame.draw.rect(screen, WHITE, self.rect)

# Ball class
class Ball:
    def __init__(self):
        self.rect = pygame.Rect(WIDTH // 2, HEIGHT // 2, BALL_SIZE, BALL_SIZE)
        self.dx = random.choice([4, -4])  # Random horizontal speed
        self.dy = random.choice([4, -4])  # Random vertical speed
        self.speed = 4

    def move(self):
        self.rect.x += self.dx
        self.rect.y += self.dy

        # Bounce off top and bottom walls
        if self.rect.top <= 0 or self.rect.bottom >= HEIGHT:
            self.dy *= -1

    def draw(self):
        pygame.draw.ellipse(screen, WHITE, self.rect)

# Main game function
def main():
    clock = pygame.time.Clock()
    paddle1 = Paddle(30, HEIGHT // 2 - PADDLE_HEIGHT // 2)
    paddle2 = Paddle(WIDTH - 30 - PADDLE_WIDTH, HEIGHT // 2 - PADDLE_HEIGHT // 2)
    ball = Ball()

    # Score variables
    score1 = 0
    score2 = 0

    running = True
    while running:
        clock.tick(FPS)
        screen.fill(BLACK)

        # Event handling
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        # Player 1 controls (W, S)
        keys = pygame.key.get_pressed()
        if keys[pygame.K_w] and paddle1.rect.top > 0:
            paddle1.rect.y -= paddle1.speed
        if keys[pygame.K_s] and paddle1.rect.bottom < HEIGHT:
            paddle1.rect.y += paddle1.speed

        # Player 2 controls (UP, DOWN arrows)
        paddle2.move(paddle2.speed)

        # Ball movement
        ball.move()

        # Collision detection
        if paddle1.rect.colliderect(ball.rect) or paddle2.rect.colliderect(ball.rect):
            ball.dx *= -1  # Ball bounces off the paddle

        # Scoring
        if ball.rect.left <= 0:
            score2 += 1
            ball = Ball()  # Reset the ball to the center
        if ball.rect.right >= WIDTH:
            score1 += 1
            ball = Ball()  # Reset the ball to the center

        # Draw everything
        paddle1.draw()
        paddle2.draw()
        ball.draw()

        # Draw the score
        score_text = font.render(f"{score1} - {score2}", True, WHITE)
        screen.blit(score_text, (WIDTH // 2 - score_text.get_width() // 2, 20))

        pygame.display.flip()

    pygame.quit()

# Start the game
if __name__ == "__main__":
    main()
pygame==2.5.0
__pycache__/
*.pyc
*.pyo
*.pyd
.idea/
.vscode/
